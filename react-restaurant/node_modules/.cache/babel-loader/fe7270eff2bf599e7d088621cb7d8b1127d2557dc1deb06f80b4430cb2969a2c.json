{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc1\\\\Desktop\\\\Menu\\\\react-restaurant\\\\src\\\\Location\\\\MapBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"./Mapbox.css\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoiZXZhLWwiLCJhIjoiY2xhdGpjMDl2MDE4aTNvbzY4c29xMGt2cCJ9.u79AybQgq3MZuvFWj_ncPQ\";\n\n//The MapBox component is responsible for rendering a map using Mapbox GL.\n//centered on specific coordinates and with a marker indicating a specific location.\n\nconst MapBox = () => {\n  _s();\n  //useRef can store a mutable element/variable and does not cause a component to re-render when the value changes\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(22.93908);\n  const [lat, setLat] = useState(40.63273);\n  const [zoom, setZoom] = useState(12);\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v12\",\n      center: [lng, lat],\n      zoom: zoom\n    });\n    new mapboxgl.Marker().setLngLat([23.060512, 40.730269]).addTo(map.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MapBox, \"+hV4bD7wkc8oHr5VwQs2EeHv3So=\");\n_c = MapBox;\nexport default MapBox;\nvar _c;\n$RefreshReg$(_c, \"MapBox\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","jsxDEV","_jsxDEV","accessToken","MapBox","_s","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","current","Map","container","style","center","Marker","setLngLat","addTo","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pc1/Desktop/Menu/react-restaurant/src/Location/MapBox.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"./Mapbox.css\";\r\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoiZXZhLWwiLCJhIjoiY2xhdGpjMDl2MDE4aTNvbzY4c29xMGt2cCJ9.u79AybQgq3MZuvFWj_ncPQ\";\r\n\r\n//The MapBox component is responsible for rendering a map using Mapbox GL.\r\n//centered on specific coordinates and with a marker indicating a specific location.\r\n\r\nconst MapBox = () => {\r\n  //useRef can store a mutable element/variable and does not cause a component to re-render when the value changes\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(22.93908);\r\n  const [lat, setLat] = useState(40.63273);\r\n  const [zoom, setZoom] = useState(12);\r\n\r\n  useEffect(() => {\r\n    if (map.current) return; // initialize map only once\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/streets-v12\",\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n    });\r\n    new mapboxgl.Marker().setLngLat([23.060512, 40.730269]).addTo(map.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"location\">\r\n      <div ref={mapContainer} className=\"map-container\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,cAAc;AACrB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnCF,QAAQ,CAACG,WAAW,GAClB,wFAAwF;;AAE1F;AACA;;AAEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,YAAY,GAAGT,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMU,GAAG,GAAGV,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EACxC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,QAAQ,CAAC;EACxC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAIS,GAAG,CAACO,OAAO,EAAE,OAAO,CAAC;IACzBP,GAAG,CAACO,OAAO,GAAG,IAAId,QAAQ,CAACe,GAAG,CAAC;MAC7BC,SAAS,EAAEV,YAAY,CAACQ,OAAO;MAC/BG,KAAK,EAAE,oCAAoC;MAC3CC,MAAM,EAAE,CAACV,GAAG,EAAEE,GAAG,CAAC;MAClBE,IAAI,EAAEA;IACR,CAAC,CAAC;IACF,IAAIZ,QAAQ,CAACmB,MAAM,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAACC,KAAK,CAACd,GAAG,CAACO,OAAO,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBrB,OAAA;MAAKsB,GAAG,EAAElB,YAAa;MAACgB,SAAS,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxBID,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AA0BZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}