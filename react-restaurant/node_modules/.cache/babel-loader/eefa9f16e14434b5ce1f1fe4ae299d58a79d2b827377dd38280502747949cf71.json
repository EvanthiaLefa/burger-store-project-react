{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc1\\\\Desktop\\\\react_burger_store_project\\\\burger-store-project-react\\\\react-restaurant\\\\src\\\\Menu\\\\Submenu\\\\HappyHour\\\\Happyhour.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Happyhour.css';\nimport HappyComponent from \"./HappyComponent\";\n\n// defining the methods outside the component so that i won't teke eroor message too many re-renders\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handleSortDescending = (offers, setOffers) => {\n  const sortedArray = [...offers].sort((a, b) => a.title < b.title ? 1 : -1);\n  setOffers(sortedArray);\n};\nconst handleSortAscending = (offers, setOffers) => {\n  const sortedArray = [...offers].sort((a, b) => a.title > b.title ? 1 : -1);\n  setOffers(sortedArray);\n};\nconst handlePriceDescending = (offers, setOffers) => {\n  const sortedArray = [...offers].sort((a, b) => a.price < b.price ? 1 : -1);\n  setOffers(sortedArray);\n};\nconst handlePriceAscending = (offers, setOffers) => {\n  const sortedArray = [...offers].sort((a, b) => a.price > b.price ? 1 : -1);\n  setOffers(sortedArray);\n};\nconst Happyhour = () => {\n  _s();\n  const [offers, setOffers] = useState([]); // state will be used to store the fetched data.\n\n  useEffect(() => {\n    // Fetch the data from the API endpoint\n    fetch(\"http://localhost:3004/happyhour\").then(response => response.json()).then(data => {\n      // Handle the response data\n      console.log(data);\n      setOffers(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mt-4\",\n      children: \"Happy Hour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mt-4\",\n      children: \"`16:00 - 18:00`\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container happyhour\",\n      children: /*#__PURE__*/_jsxDEV(HappyComponent, {\n        offers: offers,\n        handleSortAscending: () => handleSortAscending(offers, setOffers),\n        handleSortDescending: () => handleSortDescending(offers, setOffers),\n        handlePriceAscending: () => handlePriceAscending(offers, setOffers),\n        handlePriceDescending: () => handlePriceDescending(offers, setOffers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Happyhour, \"oSdmsz4iHLcziws6+GJwSv5AS1Q=\");\n_c = Happyhour;\nexport default Happyhour;\nvar _c;\n$RefreshReg$(_c, \"Happyhour\");","map":{"version":3,"names":["React","useState","useEffect","HappyComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","handleSortDescending","offers","setOffers","sortedArray","sort","a","b","title","handleSortAscending","handlePriceDescending","price","handlePriceAscending","Happyhour","_s","fetch","then","response","json","data","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pc1/Desktop/react_burger_store_project/burger-store-project-react/react-restaurant/src/Menu/Submenu/HappyHour/Happyhour.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport './Happyhour.css'\r\nimport HappyComponent from \"./HappyComponent\";\r\n\r\n// defining the methods outside the component so that i won't teke eroor message too many re-renders\r\n\r\nconst handleSortDescending = (offers, setOffers) => {\r\n    const sortedArray = [...offers].sort((a, b) => (a.title < b.title ? 1 : -1));\r\n    setOffers(sortedArray);\r\n  };\r\n  const handleSortAscending = (offers, setOffers) => {\r\n    const sortedArray = [...offers].sort((a, b) => (a.title > b.title ? 1 : -1));\r\n    setOffers(sortedArray);\r\n  };\r\n  const handlePriceDescending = (offers, setOffers) => {\r\n    const sortedArray = [...offers].sort((a, b) => (a.price < b.price ? 1 : -1));\r\n    setOffers(sortedArray);\r\n  };\r\n  const handlePriceAscending = (offers, setOffers) => {\r\n    const sortedArray = [...offers].sort((a, b) => (a.price > b.price ? 1 : -1));\r\n    setOffers(sortedArray);\r\n  };\r\n\r\nconst Happyhour = () => {\r\n    const [offers ,setOffers] = useState([]); // state will be used to store the fetched data.\r\n\r\n    useEffect(() => {\r\n        // Fetch the data from the API endpoint\r\n        fetch(\"http://localhost:3004/happyhour\")\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            // Handle the response data\r\n            console.log(data);\r\n            setOffers(data);\r\n          });\r\n      }, []);\r\n\r\n  return (\r\n    <>\r\n    <h1 className=\"text-center mt-4\">Happy Hour</h1>\r\n    <h4 className=\"text-center mt-4\">`16:00 - 18:00`</h4>\r\n    <div className=\"container happyhour\">\r\n    <HappyComponent\r\n          offers={offers}\r\n           handleSortAscending={() => handleSortAscending(offers, setOffers)}\r\n           handleSortDescending={() => handleSortDescending(offers, setOffers)}\r\n           handlePriceAscending={() => handlePriceAscending(offers, setOffers)}\r\n           handlePriceDescending={() => handlePriceDescending(offers, setOffers)}\r\n        />\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Happyhour"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}